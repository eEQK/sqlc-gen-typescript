// Code generated by sqlc. DO NOT EDIT.

import { QueryArrayConfig, QueryArrayResult } from "pg";

interface Client {
    query: (config: QueryArrayConfig) => Promise<QueryArrayResult>;
}

export module Update {
    const deleteAuthorQuery = `-- name: Update_DeleteAuthor :exec
DELETE FROM authors
WHERE id = $1`;
    export interface DeleteAuthorArgs {
        id: string;
    }
    export async function deleteAuthor(client: Client, args: DeleteAuthorArgs): Promise<void> {
        await client.query({
            text: deleteAuthorQuery,
            values: [args.id],
            rowMode: "array"
        });
    }
    const createAuthorQuery = `-- name: Update_CreateAuthor :one
INSERT INTO authors (
  name, bio
) VALUES (
  $1, $2
)
RETURNING id, name, bio`;
    export interface CreateAuthorArgs {
        name: string;
        bio: string | null;
    }
    export interface CreateAuthorRow {
        id: string;
        name: string;
        bio: string | null;
    }
    export async function createAuthor(client: Client, args: CreateAuthorArgs): Promise<CreateAuthorRow | null> {
        const result = await client.query({
            text: createAuthorQuery,
            values: [args.name, args.bio],
            rowMode: "array"
        });
        if (result.rows.length !== 1) {
            return null;
        }
        const row = result.rows[0];
        return {
            id: row[0],
            name: row[1],
            bio: row[2]
        };
    }
}

